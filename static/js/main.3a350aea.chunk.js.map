{"version":3,"sources":["mecircle.png","search.png","infomovie.png","calc.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","Navbar","bg","variant","fixed","id","Brand","href","Nav","Link","Container","fluid","Row","Col","xs","sm","lg","xl","src","require","Card","Img","Body","Text","Button","fontSize","style","fill","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a350aea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mecircle.619efbcb.png\";","module.exports = __webpack_public_path__ + \"static/media/search.3bd18380.png\";","module.exports = __webpack_public_path__ + \"static/media/infomovie.1f8f8ade.png\";","module.exports = __webpack_public_path__ + \"static/media/calc.633ea798.png\";","import React from \"react\";\nimport \"./App.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Card from \"react-bootstrap/Card\";\n// import Form from \"react-bootstrap/Form\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" variant=\"light\" fixed=\"top\" id=\"homeNav\">\n        <Navbar.Brand href=\"#home\">Bailey Niemiller Portfolio</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#projectRow\">Projects</Nav.Link>\n          <Nav.Link href=\"#contact\">Contact</Nav.Link>\n        </Nav>\n      </Navbar>\n      <Container fluid>\n        <Row id=\"helloRow\">\n          <Col id=\"helloCol\" xs={12} sm={6} lg={6} xl={6}>\n            <div id=\"hello\">\n              <h1>Hello!</h1>\n              <h2>thanks for stopping by</h2>\n            </div>\n          </Col>\n          <Col xs={12} sm={6} lg={6} xl={6}>\n            <div id=\"picture\">\n              <img src={require(\"./mecircle.png\")} id=\"me\" />\n            </div>\n          </Col>\n        </Row>\n        <Row id=\"aboutRow\">\n          <Col xs={12} sm={12} lg={12} xl={12}>\n            <div id=\"about\">\n              <h3 id=\"aboutTitle\">About Me</h3>\n              <p id=\"paragraph\">\n                Early after graduating high school, I quickly found that designing and creating\n                brought me joy. I found a passion for building things on the web\n                and I knew that's what I wanted to pursue. As I graduate from Emerging Digital Academy in Fargo, ND,\n                I am excited to grow in a career that I love.\n                <br /><br />\n                I was born in Bismarck and raised in Fargo and I absolutely love\n                living here. Iâ€™m a hardcore North Dakota girl. I enjoy\n                basketball, baking, being active, and going to the lake in the\n                summer!\n              </p>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      {/* <div id=\"midDiv\"></div> */}\n      <Container fluid id=\"projectRow\">\n        <h3 id=\"projectTitle\">Featured Projects</h3>\n        <Row>\n          <Col xs={12} sm={12} lg={4} xl={4}>\n            <Card>\n              <Card.Img variant=\"top\" src={require(\"./search.png\")} />\n              <Card.Body>\n                <Card.Text className=\"cardText\">\n                  Foodie is the solo project I created in Emerging Digital\n                  Academy. A user can create an account and login, search\n                  restaurants, and save them to the lists in their profile.\n                </Card.Text>\n                <a href=\"https://github.com/baileyniemiller/foodie\"><Button className=\"goButton\">Go to Github</Button></a>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} lg={4} xl={4}>\n            <Card>\n              <Card.Img variant=\"top\" src={require(\"./infomovie.png\")} />\n              <Card.Body>\n                <Card.Text className=\"cardText\">\n                  InfoMovie is a weekend project we completed in Emerging\n                  Digital Academy. A user can click a movie to view the details\n                  and has the option to edit the title and description.\n                </Card.Text>\n                <a href =\"https://github.com/baileyniemiller/movie-sagas\"><Button className=\"goButton\">Go to Github</Button></a>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} lg={4} xl={4}>\n            <Card>\n              <Card.Img variant=\"top\" src={require(\"./calc.png\")} />\n              <Card.Body>\n                <Card.Text className=\"cardText\">\n                  Another one of our weekend projects was to create a\n                  server-side calculator. A user can calculate two numbers and\n                  the total will be displayed as well as a running list of\n                  previous calculations.\n                </Card.Text>\n                <a href=\"https://github.com/baileyniemiller/jquery-server-calculator\"><Button className=\"goButton\">Go to Github</Button></a>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid id=\"contact\">\n        <h3 id=\"contactTitle\">Contact</h3>\n        <div className=\"socialLink\">\n          <a href=\"https://www.linkedin.com/in/baileyniemiller/\">\n            <LinkedInIcon\n              fontSize=\"large\"\n              style={{ fill: \"#8ba39f\" }}\n              className=\"social\"\n            ></LinkedInIcon>\n          </a>\n          <a href=\"https://github.com/baileyniemiller\">\n            <GitHubIcon\n              fontSize=\"large\"\n              style={{ fill: \"#8ba39f\" }}\n              className=\"social\"\n            ></GitHubIcon>\n          </a>\n        </div>\n        <Row>\n          <Col id=\"form\" xs={12} sm={12} lg={12} xl={12}>\n            <p className=\"info\">Email: baileyniemiller@gmail.com</p>\n            <p className=\"info\">Cell: 701-429-8247</p>\n            {/* <Form id=\"contact-form\">\n              <Form.Group controlId=\"formBasicHidden\">\n                <Form.Control type=\"hidden\" name=\"contact_number\" />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Your Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"John Smith\"\n                  name=\"user_name\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicTel\">\n                <Form.Label>Phone Number</Form.Label>\n                <Form.Control\n                  type=\"tel\"\n                  placeholder=\"xxx-xxx-xxxx\"\n                  name=\"user_phone\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"email@gmail.com\"\n                  name=\"user_email\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"company\">\n                <Form.Label>Company</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Company\"\n                  name=\"user_company\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"company\">\n                <Form.Label>Comments</Form.Label>\n                <Form.Control\n                  type=\"textarea\"\n                  placeholder=\"Any comments or questions?\"\n                  id=\"user_comments\"\n                />\n              </Form.Group>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                id=\"submitButton\"\n                value=\"send\"\n              >\n                Submit\n              </Button>\n            </Form> */}\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid id=\"footerRow\">\n        <p id=\"footerText\">Â© Bailey Niemiller 2020</p>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}